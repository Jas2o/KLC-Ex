<Window x:Class="KLCEx.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KLCEx" xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="KLCExplorer" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="mgs" Source="{Binding MachineGroups}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="GroupNameDisplay"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem x:Name="menuLoadToken" Header="Load Token" Click="menuLoadToken_Click"/>
        </Menu>
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel x:Name="stackFilter" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,0,0,5" Opacity="0.5">
                <Label Content="Machine Id:" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <TextBox x:Name="txtFilterMachineId" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" VerticalAlignment="Center" Width="120" Margin="5,0,0,0" KeyDown="txtFilterMachineId_KeyDown"/>
                <Label Content="Group:" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>
                <ComboBox x:Name="cmbOrg" HorizontalAlignment="Left" VerticalAlignment="Center" Width="208" IsEditable="True"
                      ItemsSource="{Binding Source={StaticResource mgs}}"
                      DisplayMemberPath="GroupNameDisplay"
                      SelectedValuePath="GroupName" Margin="5,0,0,0" KeyDown="cmbOrg_KeyDown" DropDownClosed="cmbOrg_DropDownClosed" />
                <CheckBox x:Name="chkFilterGroupSub" Content="Sub" VerticalAlignment="Center" Margin="5,0,0,0" IsChecked="True"/>
                <Button x:Name="btnFilterRefresh" Content="Refresh" HorizontalAlignment="Left" VerticalAlignment="Center" Click="btnFilterRefresh_Click" Margin="5,0,0,0"/>
            </StackPanel>
            <DataGrid x:Name="dataGridAgents" ItemsSource="{Binding ListMachine, Mode=OneWay}" IsReadOnly="True" Grid.Row="1" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding DisplayStatus, FallbackValue=Status}" Header="Status"/>
                    <DataGridTextColumn Binding="{Binding OS, FallbackValue=OS}" Header="OS"/>
                    <DataGridTextColumn Binding="{Binding ComputerName, FallbackValue=Name}" Header="Name"/>
                    <DataGridTextColumn Binding="{Binding MachineGroup, FallbackValue=Group}" Header="Group"/>
                    <DataGridTextColumn Binding="{Binding DisplayUser, FallbackValue=User}" Header="User"/>
                    <DataGridTextColumn Binding="{Binding CheckInLast, StringFormat=\{0:yyyy-MM-dd - hh:mm tt\}}" Header="CheckInLast"/>
                    <DataGridTextColumn Binding="{Binding RebootLast, StringFormat=\{0:yyyy-MM-dd - hh:mm tt\}}" Header="RebootLast"/>
                    <DataGridTextColumn Binding="{Binding AgentVersion, FallbackValue=AgentVersion}" Header="AgentVersion"/>
                </DataGrid.Columns>
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DisplayStatus}" Value="Down"/>
                                    <Condition Binding="{Binding Column.Header,RelativeSource={RelativeSource Self}}" Value="Status"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#FF8A8A8A"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DisplayStatus}" Value="Online"/>
                                    <Condition Binding="{Binding Column.Header,RelativeSource={RelativeSource Self}}" Value="Status"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#FF98C97C"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DisplayStatus}" Value="UserIdle"/>
                                    <Condition Binding="{Binding Column.Header,RelativeSource={RelativeSource Self}}" Value="Status"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#FFFFD225"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding DisplayStatus}" Value="UserActive"/>
                                    <Condition Binding="{Binding Column.Header,RelativeSource={RelativeSource Self}}" Value="Status"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="#FF1EA4F7"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
            <StackPanel Grid.Column="1" Orientation="Vertical" Grid.Row="1" Margin="5,0,0,0">
                <Button x:Name="btnConnectLaunch" Content="Live Connect" VerticalAlignment="Top" IsTabStop="False" Margin="0,0,0,5" Click="btnConnectLaunch_Click"/>
                <Button x:Name="btnConnectShared" Content="Shared" VerticalAlignment="Top" IsTabStop="False" Margin="0,0,0,5" Click="btnConnectShared_Click"/>
                <Button x:Name="btnConnectPrivate" Content="Private" VerticalAlignment="Top" IsTabStop="False" Margin="0,0,0,5" Click="btnConnectPrivate_Click"/>
                <Button x:Name="btnSendToProxy" Content="KLCProxy List" VerticalAlignment="Top" IsTabStop="False" Margin="0,0,0,5" Click="btnSendToProxy_Click"/>

                <Expander Header="Bypass" Margin="0,5,0,0">
                    <StackPanel Orientation="Vertical">
                        <Button x:Name="btnConnectAltLaunch" Content="Alternative" VerticalAlignment="Top" IsTabStop="False" Margin="0,5" Click="btnConnectAltLaunch_Click"/>
                        <Button x:Name="btnConnectAltShared" Content="Shared" VerticalAlignment="Top" IsTabStop="False" Margin="0,0,0,5" Click="btnConnectAltShared_Click"/>
                        <Button x:Name="btnConnectAltPrivate" Content="Private" VerticalAlignment="Top" IsTabStop="False" Margin="0,0,0,5" Click="btnConnectAltPrivate_Click"/>

                        <Button x:Name="btnConnectOriginalLiveConnect" Content="Live Connect" VerticalAlignment="Top" IsTabStop="False" Margin="0,10,0,5" Click="btnConnectOriginalLiveConnect_Click"/>
                        <Button x:Name="btnConnectOriginalShared" Content="Shared" VerticalAlignment="Top" IsTabStop="False" Margin="0,0,0,5" Click="btnConnectOriginalShared_Click"/>
                        <Button x:Name="btnConnectOriginalPrivate" Content="Private" VerticalAlignment="Top" IsTabStop="False" Margin="0,0,0,5" Click="btnConnectOriginalPrivate_Click"/>
                        <CheckBox x:Name="chkUseMITM" Content="Use MITM" Checked="chkUseMITM_Checked" Unchecked="chkUseMITM_Unchecked"/>
                    </StackPanel>
                </Expander>

            </StackPanel>
            <!--<TextBox x:Name="txtMachines" Grid.Row="1" TextWrapping="Wrap" FontFamily="Consolas"/>-->

        </Grid>
    </DockPanel>
</Window>
